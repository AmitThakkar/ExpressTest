"use strict";

exports.generateDomain = function (schemas) {
    var fs = require("fs");
    var CONSTANTS = require("../enum/CONSTANTS");
    var domainsDirectory = process.cwd() + "/domain/";
    var generateDomains = function () {
        schemas.forEach(function (schemaName) {
            var domainName = schemaName.replace(/^(.)(.*)(.json)$/, function (schemaName, g1, g2) {
                return g1.toUpperCase() + g2;
            });
            fs.readFile(__dirname + "/" + "Content.txt", function (error, data) {
                var domain = data.toString().replace(/{{domainName}}/g, domainName)
                    .replace(/{{domainNameInSmallLetter}}/g, domainName.toLowerCase())
                    .replace(/{{schema}}/, (JSON.stringify(require(process.cwd() + "/schema/" + schemaName))
                        .replace(/:"(.*?)"/g, ":$1").replace(/{/, "{\n" + CONSTANTS.TAB).replace(/,/g, ",\n" + CONSTANTS.TAB)
                        .replace("}", "\n}").replace(/:/g, ": ")));
                fs.writeFile(domainsDirectory + domainName + ".js", domain, function (error) {
                    if (error) {
                        console.log("Some Error Occur at the time of generating the Domains, Error=", error);
                    } else {
                        console.log("Domain(" + domainName + ") Generated");
                    }
                });
            });
        });
    };
    fs.exists(domainsDirectory, function (exists) {
                if (exists) {
                    generateDomains();
                } else {
                    fs.mkdir(domainsDirectory, function (error) {
                        if (error) {
                            console.log("Error Occur at the time of creating the directive(" + domainsDirectory + "). Error= ", error);
                        } else {
                            generateDomains();
                        }
                    });
                }
            });
};