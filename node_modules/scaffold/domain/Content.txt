"use strict";

var mongoose = require("mongoose");
var ObjectId = mongoose.Types.ObjectId;

var {{domainName}} = new mongoose.Schema({{schema}});

{{domainName}}.statics.findById = function (id, projection, callback) {
    if (!callback) {
        callback = projection;
        projection = {};
    }
    this.find({ _id: ObjectId(id)}, projection, callback);
};
{{domainName}}.statics.findAll = function (max, offset, projection, callback) {
    if (!callback) {
        callback = projection;
        projection = {};
    }
    this.find({}, projection, {limit: max, skip: offset}, callback);
};
{{domainName}}.statics.removeById = function (id, callback) {
    this.remove({ _id: ObjectId(id)}, callback);
};
{{domainName}}.statics.update{{domainName}} = function ({{domainNameInSmallLetter}}CO, callback) {
    var _id = {{domainNameInSmallLetter}}CO._id;
    delete {{domainNameInSmallLetter}}CO._id;
    this.update({ _id: ObjectId(_id)}, {{domainNameInSmallLetter}}CO, {multi: false, upsert: false}, callback);
};

module.exports = mongoose.model("{{domainName}}", {{domainName}});