"use strict";

exports.generateAll = function () {
    var fs = require("fs");
    var path = require("path");
    var _ = require("underscore");
    var CONSTANTS = require("../enum/CONSTANTS");
    fs.readdir(process.cwd() + "/schema/", function (error, schemas) {
        if (error) {
            console.log("Some error occur while reading the schemas, Error: ", error);
        } else if (schemas && schemas.length > 0) {
            var ngViewsDirectory = process.cwd() + "/views/";
            var generateNgViews = function (ngViewDirectory, domainName) {
                var domainNameInSmallLetter = domainName.toLowerCase();
                var views = ["create", "edit", "list", "show"];
                views.forEach(function (view) {
                    fs.readFile(__dirname + "/" + view + "Content.txt", function (error, data) {
                        if (error) {
                            console.log("Error occur at the time of reading the " + view + "Content.txt, Error=", error);
                        } else {
                            fs.writeFile(ngViewDirectory + view + ".html",
                                data.toString().replace(/{{domainNameInSmallLetter}}/g, domainNameInSmallLetter)
                                    .replace(/{{domainName}}/g, domainName),
                                function (error, data) {
                                    console.log(error, data)
                                });
                        }
                    });
                });
            };
            var generateNgViewsAndDirectory = function () {
                schemas.forEach(function (schemaName) {
                    var domainName = schemaName.replace(/^(.)(.*)(.json)$/, function (schemaName, g1, g2) {
                        return g1.toUpperCase() + g2;
                    });
                    var ngViewDirectory = ngViewsDirectory + domainName.toLowerCase() + "/";
                    fs.exists(ngViewDirectory, function (exists) {
                        if (exists) {
                            generateNgViews(ngViewDirectory, domainName);
                        } else {
                            fs.mkdir(ngViewDirectory, function (error, dir) {
                                if (error) {
                                    console.log("Error Occur at the time of creating the directive(" + ngViewDirectory + "). Error= ", error);
                                } else {
                                    generateNgViews(ngViewDirectory, domainName);
                                }
                            });
                        }
                    });
                });
            };
            fs.exists(ngViewsDirectory, function (exists) {
                if (exists) {
                    generateNgViewsAndDirectory()
                } else {
                    fs.mkdir(ngViewsDirectory, function (error, dir) {
                        if (error) {
                            console.log("Error Occur at the time of creating the directive(" + ngViewsDirectory + "). Error= ", error);
                        } else {
                            generateNgViewsAndDirectory();
                        }
                    });
                }
            });
        } else {
            console.log("No Schema found");
        }
    });
};