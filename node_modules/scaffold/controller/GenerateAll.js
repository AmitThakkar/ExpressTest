"use strict";

exports.generateAll = function () {
    var fs = require("fs");
    var _ = require("underscore");
    var controllerContent = require("./Content");
    fs.readdir(process.cwd() + "/schema/", function (error, schemas) {
        if (error) {
            console.log("Some error occur while reading the schemas, Error: ", error);
        } else if (schemas && schemas.length > 0) {
            schemas.forEach(function (schemaName) {
                var domainName = schemaName.replace(/^(.)(.*)(.json)$/, function (schemaName, g1, g2) {
                    return g1.toUpperCase() + g2;
                });
                var newDocument = "{";
                var updatedDocument = "{\n            _id: request.param('_id'),";
                var schema = require(process.cwd() + "/schema/" + schemaName);
                _.each(schema, function (value, key) {
                    newDocument += ("\n            " + key + ": request.param('" + key + "'),");
                    updatedDocument += ("\n            " + key + ": request.param('" + key + "'),");
                });
                newDocument += "}";
                updatedDocument += "}";
                newDocument = newDocument.replace(/,}/, "\n        }");
                updatedDocument = updatedDocument.replace(/,}/, "\n        }");
                var controller = controllerContent.getText().replace(/{{domainName}}/g, domainName)
                    .replace(/{{domainNameInSmallLetter}}/g, domainName.toLowerCase())
                    .replace(/{{newDocument}}/, newDocument).replace(/{{updatedDocument}}/, updatedDocument);
                fs.writeFile(process.cwd() + "/controller/" + domainName + "Controller.js", controller, function (error, data) {
                    console.log(error, data)
                });
            });
        } else {
            console.log("No Schema found");
        }
    });
};