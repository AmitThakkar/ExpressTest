"use strict";

exports.generateAll = function () {
    var fs = require("fs");
    var _ = require("underscore");
    var CONSTANTS = require("../enum/CONSTANTS");
    fs.readdir(process.cwd() + "/schema/", function (error, schemas) {
        if (error) {
            console.log("Some error occur while reading the schemas, Error: ", error);
        } else if (schemas && schemas.length > 0) {
            var controllersDirectory = process.cwd() + "/controller/";
            var generateControllers = function () {
                schemas.forEach(function (schemaName) {
                    var domainName = schemaName.replace(/^(.)(.*)(.json)$/, function (schemaName, g1, g2) {
                        return g1.toUpperCase() + g2;
                    });
                    var newDocument = "{";
                    var updatedDocument = "{\n" + CONSTANTS.TAB + CONSTANTS.TAB + CONSTANTS.TAB + "_id: request.param('_id'),";
                    var schema = require(process.cwd() + "/schema/" + schemaName);
                    _.each(schema, function (value, key) {
                        newDocument += ("\n" + CONSTANTS.TAB + CONSTANTS.TAB + CONSTANTS.TAB + key + ": request.param('" + key + "'),");
                        updatedDocument += ("\n" + CONSTANTS.TAB + CONSTANTS.TAB + CONSTANTS.TAB + key + ": request.param('" + key + "'),");
                    });
                    newDocument += "}";
                    updatedDocument += "}";
                    newDocument = newDocument.replace(/,}/, "\n" + CONSTANTS.TAB + CONSTANTS.TAB + "}");
                    updatedDocument = updatedDocument.replace(/,}/, "\n" + CONSTANTS.TAB + CONSTANTS.TAB + "}");
                    fs.readFile(__dirname + "/" + "Content.txt", function (error, data) {
                        var controller = data.toString().replace(/{{domainName}}/g, domainName)
                            .replace(/{{domainNameInSmallLetter}}/g, domainName.toLowerCase())
                            .replace(/{{newDocument}}/, newDocument).replace(/{{updatedDocument}}/, updatedDocument);
                        fs.writeFile(controllersDirectory + domainName + "Controller.js", controller, function (error, data) {
                            if (error) {
                                console.log("Some Error Occur at the time of generating the Controllers, Error=", error);
                            } else {
                                console.log("Controllers Generated");
                            }
                        });
                    });
                });
            };
            fs.exists(controllersDirectory, function (exists) {
                if (exists) {
                    generateControllers();
                } else {
                    fs.mkdir(controllersDirectory, function (error, dir) {
                        if (error) {
                            console.log("Error Occur at the time of creating the directive(" + controllersDirectory + "). Error= ", error);
                        } else {
                            generateControllers();
                        }
                    });
                }
            });
        } else {
            console.log("No Schema found");
        }
    });
};