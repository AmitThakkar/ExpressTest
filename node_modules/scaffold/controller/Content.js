"use strict";

exports.getText = function () {
    return '\
"use strict";\n\n\
var ResponseStatus = require("../src/enum/ResponseStatus");\n\n\
exports.allowedMethods = {\n\
    "get": ["GET"],\n\
    "list": ["GET"],\n\
    "delete": ["GET", "DELETE"],\n\
    "save": ["POST"],\n\
    "update": ["PUT", "POST"]\n\
};\n\n\
exports.dependencies = {\n\
    {{domainName}}Service: ""\n\
};\n\n\
exports.actions = {\n\
    get: function (request, response) {\n\
        exports.dependencies.{{domainName}}Service.get(request.param("id"))\n\
            .on(ResponseStatus.ERROR, function () {\n\
                var body = "Error Occur, Please try later.";\n\
                response.writeHead(500, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.NOT_FOUND, function () {\n\
                var body = "{{domainName}} not found with Id -> " + request.param("id");\n\
                response.writeHead(204, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.SUCCESS, function ({{domainNameInSmallLetter}}) {\n\
                var body = JSON.stringify({{domainNameInSmallLetter}});\n\
                response.writeHead(200, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            });\n\
    },\n\
    delete: function (request, response) {\n\
        exports.dependencies.{{domainName}}Service.delete(request.param("id"))\n\
            .on(ResponseStatus.ERROR, function () {\n\
                var body = "Error Occur, Please try later.";\n\
                response.writeHead(500, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.NOT_FOUND, function () {\n\
                var body = "{{domainName}} not found with Id -> " + request.param("id");\n\
                response.writeHead(204, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.SUCCESS, function () {\n\
                var body = "{{domainName}} Deleted, id -> " + request.query.id;\n\
                response.writeHead(200, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            });\n\
    },\n\
    save: function (request, response) {\n\
        var {{domainNameInSmallLetter}}CO = {{newDocument}};\n\
        exports.dependencies.{{domainName}}Service.save({{domainNameInSmallLetter}}CO)\n\
            .on(ResponseStatus.ERROR, function () {\n\
                var body = "Error Occur, Please try later.";\n\
                response.writeHead(500, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.SUCCESS, function ({{domainNameInSmallLetter}}) {\n\
                var body = JSON.stringify({{domainNameInSmallLetter}});\n\
                response.writeHead(201, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.NOT_SAVED, function () {\n\
                var body = "{{domainName}} not saved";\n\
                response.writeHead(203, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            });\n\
    },\n\
    update: function (request, response) {\n\
        var {{domainNameInSmallLetter}}CO = {{updatedDocument}};\n\
        exports.dependencies.{{domainName}}Service.update({{domainNameInSmallLetter}}CO)\n\
            .on(ResponseStatus.ERROR, function () {\n\
                var body = "Error Occur, Please try later.";\n\
                response.writeHead(500, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.NOT_FOUND, function () {\n\
                var body = "{{domainName}} not found with Id -> " + {{domainNameInSmallLetter}}CO._id;\n\
                response.writeHead(204, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.SUCCESS, function () {\n\
                var body = "{{domainName}} Updated, content -> " + JSON.stringify({{domainNameInSmallLetter}}CO);\n\
                response.writeHead(202, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            });\n\
    },\n\
    list: function (request, response) {\n\
        exports.dependencies.{{domainName}}Service.list(request.param("max"), request.param("offset"))\n\
            .on(ResponseStatus.ERROR, function () {\n\
                var body = "Error Occur, Please try later.";\n\
                response.writeHead(500, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.NOT_FOUND, function () {\n\
                var body = "{{domainName}} not found with Max and offset -> " + request.query.max + " And " + request.query.offset;\n\
                response.writeHead(204, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            })\n\
            .on(ResponseStatus.SUCCESS, function ({{domainNameInSmallLetter}}s) {\n\
                var body = JSON.stringify({{domainNameInSmallLetter}}s);\n\
                response.writeHead(200, {"Content-Length": body.length, "Content-Type": "text/plain" });\n\
                response.end(body);\n\
            });\n\
    }\n\
};'
};