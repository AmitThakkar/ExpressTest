exports.initializeApplication = function () {
    var application = this;
    var fs = require('fs');
    var _ = require('underscore');
    var mongoose = require('mongoose');
    mongoose.connect(application.config.dataSource.mongo.url);
    console.log("****************************************************************************************");
    console.log("Connection to Database -> ", application.config.dataSource.mongo.url);
    console.log("****************************************************************************************\n\n");
    var dependencies = {};
    fs.readdir("./domain", function (error, domainFileNames) {
        if (error) {
            console.log("Error occur at the time of reading Services");
        } else if (domainFileNames && domainFileNames.length > 0) {
            domainFileNames.forEach(function (domain) {
                dependencies[/(.*)(.js)/g.exec(domain)[1]] = require("../../../domain/" + domain);
            });
        }
        fs.readdir("./service", function (error, serviceFileNames) {
            if (error) {
                console.log("Error occur at the time of reading Services");
            } else if (serviceFileNames && serviceFileNames.length > 0) {
                serviceFileNames.forEach(function (serviceFileName) {
                    dependencies[/(.*)(.js)/g.exec(serviceFileName)[1]] = require("../../../service/" + serviceFileName);
                });
                serviceFileNames.forEach(function (serviceFileName) {
                    _.each(dependencies[/(.*)(.js)/g.exec(serviceFileName)[1]].dependencies, function (value, dependency) {
                        dependencies[/(.*)(.js)/g.exec(serviceFileName)[1]].dependencies[dependency] = dependencies[dependency];
                    });
                });
            }
            fs.readdir("./controller", function (error, controllerFileNames) {
                if (error) {
                    console.log("Error Occur at the time of reading Controllers");
                } else if (controllerFileNames && controllerFileNames.length > 0) {
                    controllerFileNames.forEach(function (controllerFileName) {
                        var controllerName = /(.*)(Controller)/.exec(controllerFileName)[1];
                        var controller = require("../../../controller/" + controllerFileName);
                        _.each(controller.actions, function (handler, actionName) {
                            controller.allowedMethods[actionName].forEach(function (methodName) {
                                application[methodName.toLowerCase()]('/' + controllerName + "/" + actionName, handler);
                            });
                        });
                        _.each(controller.dependencies, function (value, dependency) {
                            controller.dependencies[dependency] = dependencies[dependency];
                        });
                    });
                } else {
                    console.log("No Controller found");
                }
            });
        });
    });
};